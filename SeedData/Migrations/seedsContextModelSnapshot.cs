// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeedData.Data;

namespace SeedData.Migrations
{
    [DbContext(typeof(seedsContext))]
    partial class seedsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113");

            modelBuilder.Entity("SeedData.Data.Color", b =>
                {
                    b.Property<int>("Idcolor")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idcolor")
                        .HasColumnType("int(11)");

                    b.Property<string>("Color1")
                        .HasColumnName("color")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("Idcolor");

                    b.ToTable("color","seeds");
                });

            modelBuilder.Entity("SeedData.Data.Month", b =>
                {
                    b.Property<int>("Idmonth")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idmonth")
                        .HasColumnType("int(11)");

                    b.Property<string>("Month1")
                        .HasColumnName("month")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("Idmonth");

                    b.ToTable("month","seeds");
                });

            modelBuilder.Entity("SeedData.Data.Seed", b =>
                {
                    b.Property<int>("SeedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("seedId")
                        .HasColumnType("int(11)");

                    b.Property<int?>("BloomMonthId")
                        .HasColumnName("bloomMonthId")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Color1Id")
                        .HasColumnName("color1Id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Color2Id")
                        .HasColumnName("color2Id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Color3Id")
                        .HasColumnName("color3Id")
                        .HasColumnType("int(11)");

                    b.Property<string>("CommonName")
                        .HasColumnName("commonName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<byte?>("Dry")
                        .HasColumnName("dry")
                        .HasColumnType("tinyint(4)");

                    b.Property<byte?>("Drymesic")
                        .HasColumnName("drymesic")
                        .HasColumnType("tinyint(4)");

                    b.Property<int?>("EndMonthId")
                        .HasColumnName("endMonthId")
                        .HasColumnType("int(11)");

                    b.Property<byte?>("Mesic")
                        .HasColumnName("mesic")
                        .HasColumnType("tinyint(4)");

                    b.Property<byte?>("Prairie")
                        .HasColumnName("prairie")
                        .HasColumnType("tinyint(4)");

                    b.Property<byte?>("Savanna")
                        .HasColumnName("savanna")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("ScientificName")
                        .HasColumnName("scientificName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("StartMonthId")
                        .HasColumnName("startMonthId")
                        .HasColumnType("int(11)");

                    b.Property<byte?>("Wet")
                        .HasColumnName("wet")
                        .HasColumnType("tinyint(4)");

                    b.Property<byte?>("Wetmesic")
                        .HasColumnName("wetmesic")
                        .HasColumnType("tinyint(4)");

                    b.Property<byte?>("Woodland")
                        .HasColumnName("woodland")
                        .HasColumnType("tinyint(4)");

                    b.HasKey("SeedId");

                    b.HasIndex("BloomMonthId")
                        .HasName("fk_monthbloom_idx");

                    b.HasIndex("Color1Id")
                        .HasName("fk_color_idx");

                    b.HasIndex("Color2Id")
                        .HasName("fk_color2_idx");

                    b.HasIndex("Color3Id")
                        .HasName("fk_color3_idx");

                    b.HasIndex("EndMonthId")
                        .HasName("fk_monthend_idx");

                    b.HasIndex("StartMonthId")
                        .HasName("fk_monthstart_idx");

                    b.ToTable("seed","seeds");
                });

            modelBuilder.Entity("SeedData.Data.Seed", b =>
                {
                    b.HasOne("SeedData.Data.Month", "BloomMonth")
                        .WithMany("SeedBloomMonth")
                        .HasForeignKey("BloomMonthId")
                        .HasConstraintName("fk_monthbloom");

                    b.HasOne("SeedData.Data.Color", "Color1")
                        .WithMany("SeedColor1")
                        .HasForeignKey("Color1Id")
                        .HasConstraintName("fk_color");

                    b.HasOne("SeedData.Data.Color", "Color2")
                        .WithMany("SeedColor2")
                        .HasForeignKey("Color2Id")
                        .HasConstraintName("fk_color2");

                    b.HasOne("SeedData.Data.Color", "Color3")
                        .WithMany("SeedColor3")
                        .HasForeignKey("Color3Id")
                        .HasConstraintName("fk_color3");

                    b.HasOne("SeedData.Data.Month", "EndMonth")
                        .WithMany("SeedEndMonth")
                        .HasForeignKey("EndMonthId")
                        .HasConstraintName("fk_monthend");

                    b.HasOne("SeedData.Data.Month", "StartMonth")
                        .WithMany("SeedStartMonth")
                        .HasForeignKey("StartMonthId")
                        .HasConstraintName("fk_monthstart");
                });
#pragma warning restore 612, 618
        }
    }
}
